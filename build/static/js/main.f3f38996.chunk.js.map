{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onAdd","onClick","className","style","backgroundColor","defaultProps","Header","title","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3f38996.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types'\nconst Button = ({color, text,onAdd}) => {\n    return <button onClick ={onAdd} className='btn' style = {{backgroundColor:color}}>{text}</button>\n}\nButton.defaultProps ={\n    color:'steelBlue'\n}\nButton.propTypes ={\n    text:PropTypes.string,\n    color:PropTypes.string\n}\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\nconst Header = ({title,onAdd,showAdd}) => {\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button color ={showAdd? \"red\":\"green\"} text = {showAdd?'Close':'Add'}\n            onAdd ={onAdd}/>\n        </header>\n    )\n}\nHeader.defaultProps = {\n    title:'Task Tracker',\n}\nHeader.propTypes={\n    title: PropTypes.string.isRequired,\n}\n\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\nimport Tasks from \"./Tasks\"\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder?'reminder':''}`} onDoubleClick = {()=>onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style = {{color:'red', cursor:'pointer'}} onClick = {()=>onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n        {tasks.map((task)=>(\n            <Task key={task.id} \n            task = {task} \n            onDelete = {onDelete} onToggle = {onToggle}/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from \"react\"\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] =useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n    const onSubmit = (e) =>{\n        e.preventDefault()\n        if(!text){\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({text, day, reminder})\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n    return (\n        <form className = \"add-form\" \n        onSubmit = { onSubmit }>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add task\"\n                value = {text} \n                onChange ={(e)=>setText(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" \n                value = {day} \n                onChange ={(e)=>setDay(e.target.value)}\n                placeholder=\"Add day\"/>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input \n                type=\"checkbox\" \n                checked ={reminder}\n                value = {reminder} \n                onChange ={(e)=>setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type=\"submit\" value=\"Save Task\" className = \"btn btn-block\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from \"react\"\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id:1,\n      text:\"Doctos appointment\",\n      day:\"Feb 5th at 2:30pm\",\n      reminder:\"true\"\n    },\n    {\n      id:2,\n      text:\"Grocery Shopping\",\n      day:\"Feb 5th at 4:30pm\",\n      reminder:\"true\"\n    },\n    {\n      id:3,\n      text:\"Hiking\",\n      day:\"Feb 5th at 5:30pm\",\n      reminder:\"true\"\n    }\n  ])\n  //Delete Task\n  const deleteTask = (id)=>{\n    setTasks(tasks.filter((task)=>task.id!==id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = (id) =>{\n    setTasks(tasks.map((task)=> task.id === id\n    ? { ...task,reminder: !task.reminder}:task))\n  }\n\n  //Add task\n  const addTask =(task) =>{\n    const id = Math.floor(Math.random()*10000)+1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n \n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setShowAddTask(!showAddTask)}\n      showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask} />}\n      {tasks.length >0? <Tasks tasks ={tasks} \n      onDelete = {deleteTask} \n      onToggle = {toggleReminder}/> : 'No tasks to show'}\n    </div>\n  );\n}\n\nexport default App; \n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}